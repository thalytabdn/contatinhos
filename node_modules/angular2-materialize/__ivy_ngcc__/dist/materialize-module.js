import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MaterializeDirective } from './materialize-directive';
import * as ɵngcc0 from '@angular/core';
var MaterializeModule = (function () {
    function MaterializeModule() {
    }
    /**
     * @return {?}
     */
    MaterializeModule.forRoot = function () {
        return {
            ngModule: MaterializeModule
        };
    };
MaterializeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MaterializeModule });
MaterializeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MaterializeModule_Factory(t) { return new (t || MaterializeModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MaterializeModule, { declarations: function () { return [MaterializeDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MaterializeDirective]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaterializeModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MaterializeDirective
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    MaterializeDirective
                ]
            }]
    }], function () { return []; }, null); })();
    return MaterializeModule;
}());
export { MaterializeModule };
/**
 * @nocollapse
 */
MaterializeModule.ctorParameters = function () { return []; };
function MaterializeModule_tsickle_Closure_declarations() {
    /** @type {?} */
    MaterializeModule.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    MaterializeModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWxpemUtbW9kdWxlLmpzIiwic291cmNlcyI6WyJtYXRlcmlhbGl6ZS1tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQU07QUFDTjtBQUNBO0FBQ0EsNkJBYUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTWF0ZXJpYWxpemVEaXJlY3RpdmUgfSBmcm9tICcuL21hdGVyaWFsaXplLWRpcmVjdGl2ZSc7XG52YXIgTWF0ZXJpYWxpemVNb2R1bGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1hdGVyaWFsaXplTW9kdWxlKCkge1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIE1hdGVyaWFsaXplTW9kdWxlLmZvclJvb3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogTWF0ZXJpYWxpemVNb2R1bGVcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBNYXRlcmlhbGl6ZU1vZHVsZTtcbn0oKSk7XG5leHBvcnQgeyBNYXRlcmlhbGl6ZU1vZHVsZSB9O1xuTWF0ZXJpYWxpemVNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgICAgICBNYXRlcmlhbGl6ZURpcmVjdGl2ZVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgaW1wb3J0czogW1xuICAgICAgICAgICAgICAgICAgICBDb21tb25Nb2R1bGVcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICAgICAgTWF0ZXJpYWxpemVEaXJlY3RpdmVcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LF0gfSxcbl07XG4vKipcbiAqIEBub2NvbGxhcHNlXG4gKi9cbk1hdGVyaWFsaXplTW9kdWxlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW107IH07XG5mdW5jdGlvbiBNYXRlcmlhbGl6ZU1vZHVsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBNYXRlcmlhbGl6ZU1vZHVsZS5kZWNvcmF0b3JzO1xuICAgIC8qKlxuICAgICAqIEBub2NvbGxhcHNlXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgTWF0ZXJpYWxpemVNb2R1bGUuY3RvclBhcmFtZXRlcnM7XG59XG4iXX0=